name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # 2) Configure SSH
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Since SSH listens on the default port 22
          ssh-keyscan -p 22 -H "ul.berthet.ch" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # 3) Deploy over SSH
      - name: Deploy
        run: |
          # Environment variables from secrets
          export SSH_KEY="$HOME/.ssh/id_rsa"
          export SERVER="${{ secrets.REMOTE_SERVER }}"
          export SSH_PORT="22"
          export DOCKER_PORT="1897"
          export IMAGE_NAME="${{ secrets.DOCKER_IMAGE }}"
          export CONTAINER_NAME="${{ secrets.CONTAINER_NAME }}"

          # Build the remote commands
          REMOTE_COMMANDS=$(cat <<EOF
            echo "Finding the container associated with '${IMAGE_NAME}'..."
            CONTAINER_ID=\$(sudo docker ps -a -q --filter "ancestor=${IMAGE_NAME}")

            if [ -n "\$CONTAINER_ID" ]; then
              echo "Stopping and removing the container..."
              sudo docker stop \$CONTAINER_ID
              sudo docker rm \$CONTAINER_ID
            else
              echo "No container found for the image '${IMAGE_NAME}'."
            fi

            echo "Removing the current Docker image '${IMAGE_NAME}'..."
            IMAGE_ID=\$(sudo docker images -q ${IMAGE_NAME})
            if [ -n "\$IMAGE_ID" ]; then
              sudo docker rmi \$IMAGE_ID
            else
              echo "No image found with the name '${IMAGE_NAME}'."
            fi

            echo "Pulling the latest code from the repository..."
            cd ~/FamilyGroupDraw && git pull

            echo "Building a new Docker image..."
            sudo docker build -t ${IMAGE_NAME} .

            echo "Running the new container on port ${DOCKER_PORT}..."
            sudo docker run -d --name ${CONTAINER_NAME} -p ${DOCKER_PORT}:${DOCKER_PORT} ${IMAGE_NAME}
          EOF
          )

          echo "Connecting to the server (SSH on port ${SSH_PORT}) and deploying..."
          ssh -i "$SSH_KEY" -p "$SSH_PORT" "$SERVER" "$REMOTE_COMMANDS"
          echo "Deployment completed!"
